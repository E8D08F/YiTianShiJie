#!/usr/local/bin/python3
import sys

lineMultiplier = 1.667
fontSize = 18
lineEM = 32

def header():
    print(f'''
:root {{
    --font-size: {fontSize}px;
    --line-em: {lineEM};
    --line-length: calc(var(--line-em) * 1rem);
    --line-multiplier: {lineMultiplier};
    --line-march: calc(var(--line-multiplier) * 1rem);
    --line-across: calc((var(--line-multiplier) * 2 - 1) * 1rem);
    --line-side: calc((var(--line-multiplier) - 1) / 2 * 1rem);
}}

@font-face {{
    font-family: Kai;
    src: local("Kaiti TC Regular"), local(STKaiTi-TC-Regular), local("Kaiti TC"), local("Kaiti SC"), local(STKaiti), local(BiauKai), local("標楷體"), local(DFKaiShu-SB-Estd-BF), local(Kaiti), local(DFKai-SB);
}}

@font-face {{
    font-family: BopomofoRuby;
    src: url(https://raw.githubusercontent.com/cmex-30/Bopomofo_on_Web/master/font/BopomofoRuby1909-v1-Regular.ttf);
}}'''.strip(), end='\n' * 2)

def lineAcross():
    return (lineMultiplier * 2 - 1) * fontSize

def lineSide():
    return (lineMultiplier - 1) / 2 * fontSize

def lineEMDown(_from: int, _to: int, fontSizechange: float=None):
    global fontSize
    insertFontSizeFirst = False
    if fontSizechange is not None:
        insertFontSizeFirst = True
        fontSize = fontSizechange

    for i in range(_from, _to, -1):
        lineLength = i * fontSize
        print(f'''
@media screen and (max-height: {lineLength + lineAcross() * 2:.3f}px) {{
    :root {{{f"""
        --font-size: {fontSize}px;""" if insertFontSizeFirst and i == _from else ''}
        --line-em: {i-1};
    }}
}}'''.strip(), end='\n' * 2)
    
    return _to * fontSize + lineAcross() * 2

def marginChanged(lineEM: int, lastHeight: float):
    print(f'''
@media screen and (max-height: {lastHeight:.2f}px) {{
    :root {{
        --vertical-spacing: calc((100vh - {lineEM}rem) / 2);
    }}
    article {{
        margin: max(var(--vertical-spacing), {lineAcross()}px)
            calc(max(var(--vertical-spacing), {lineAcross()}px) - {lineSide()}px);
    }}
}}

          ''')


with open('./styles/typography.css', 'w') as fout:
    sys.stdout = fout
    header()
    lineEMDown(32, 28)
    lastHeight = lineEMDown(32, 28, 16)
    lineEMDown(28, 18)
